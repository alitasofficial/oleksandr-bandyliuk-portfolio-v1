---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
// import Footer from '../components/Footer.astro';
import FormattedDate from "../components/FormattedDate.astro";
import Footer from "../components/Footer.astro";

type Props = CollectionEntry<"blog">["data"];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
  </head>

  <body class="font-sans antialiased">
    <div class="container max-w-[62rem] px-4 mx-auto">
      <Header />
    </div>
    <main class="container max-w-[62rem] px-4 mx-auto">
      <article class="max-w-full w-full pt-11">
        <div class="">
          <div>
            <h1 class="font-[700] text-3xl">{title}</h1>
            <div class="mt-1 text-gray">
              <FormattedDate date={pubDate} />
              {
                updatedDate && (
                  <div class="last-updated-on">
                    Last updated on <FormattedDate date={updatedDate} />
                  </div>
                )
              }
            </div>
          </div>
          <div class="prose max-w-full w-full mt-1 prose-p:text-black">
            <slot />
          </div>
        </div>
      </article>
    </main>
    <Footer />

    <style is:global>
      .copy-code {
        position: absolute;
        top: 0;
        right: 0;
        padding: 0.25rem 0.5rem;
        font-size: 0.75rem;
        line-height: 1rem;
      }
    </style>

    <script>
      let copyButtonLabel = "Copy Code";
      let codeBlocks = Array.from(document.querySelectorAll("pre"));

      for (let codeBlock of codeBlocks) {
        let wrapper = document.createElement("div");
        wrapper.style.position = "relative";

        let copyButton = document.createElement("button");
        copyButton.className =
          "copy-code bg-text-secondary-color rounded-tr-md hover:bg-separator-color hover:text-text-main-color";
        copyButton.innerHTML = copyButtonLabel;

        codeBlock.setAttribute("tabindex", "0");
        codeBlock.appendChild(copyButton);
        // wrap codebock with relative parent element
        codeBlock.parentNode?.insertBefore(wrapper, codeBlock);
        wrapper.appendChild(codeBlock);

        copyButton.addEventListener("click", async () => {
          await copyCode(codeBlock, copyButton);
        });
      }

      async function copyCode(block, button) {
        let code = block.querySelector("code");
        let text = code.innerText;

        await navigator.clipboard.writeText(text);

        // visual feedback that task is completed
        button.innerText = "Code Copied";

        setTimeout(() => {
          button.innerText = copyButtonLabel;
        }, 700);
      }
    </script>
  </body>
</html>
